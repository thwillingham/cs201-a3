func findSet(v) {
    if (v.parent == v) {
        return v;
    } else {
        v.parent = findSet(v.parent);
        return v.parent;
    }
}

ds class
    rootList = doubly-linked list
    methods
        makeSet
        findSet (path compression)
        union (by rank)


program flow:
import file
  -add edges to linked list (if not already in list)
  -add vertices to linked list (if not already in list)
  -heapsort edges, output to array
  -heapsort vertices, output to array
kruskal
  -make set of every vertex
  -traverse edges and update disjoint set accordingly
